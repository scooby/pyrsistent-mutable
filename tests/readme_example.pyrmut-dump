Module(body=[
  ImportFrom(
    module='pyrsistent_mutable.globals',
    names=[
      alias(
        name='del_slice',
        asname='_del_slice'),
      alias(
        name='invoke',
        asname='_invoke'),
      alias(
        name='set_via_attr',
        asname='_set_via_attr'),
      alias(
        name='set_via_slice',
        asname='_set_via_slice')],
    level=0),
  ImportFrom(
    module='pyrsistent',
    names=[
      alias(
        name='PRecord',
        asname=None),
      alias(
        name='field',
        asname=None),
      alias(
        name='pvector',
        asname=None),
      alias(
        name='pmap',
        asname=None)],
    level=0),
  ClassDef(
    name='Simple',
    bases=[Name(
      id='PRecord',
      ctx=Load())],
    keywords=[],
    body=[
      Assign(
        targets=[Name(
          id='attr',
          ctx=Store())],
        value=Call(
          func=Name(
            id='field',
            ctx=Load()),
          args=[],
          keywords=[])),
      Assign(
        targets=[Name(
          id='other',
          ctx=Store())],
        value=Call(
          func=Name(
            id='field',
            ctx=Load()),
          args=[],
          keywords=[]))],
    decorator_list=[]),
  FunctionDef(
    name='example_func',
    args=arguments(
      args=[],
      vararg=None,
      kwonlyargs=[],
      kw_defaults=[],
      kwarg=None,
      defaults=[]),
    body=[
      Assign(
        targets=[Name(
          id='my_precord',
          ctx=Store())],
        value=Call(
          func=Name(
            id='Simple',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='attr',
              value=Call(
                func=Name(
                  id='Simple',
                  ctx=Load()),
                args=[],
                keywords=[
                  keyword(
                    arg='attr',
                    value=Num(n=10)),
                  keyword(
                    arg='other',
                    value=Num(n=11))])),
            keyword(
              arg='other',
              value=Num(n=22))])),
      Assign(
        targets=[Name(
          id='my_vector',
          ctx=Store())],
        value=Call(
          func=Name(
            id='pvector',
            ctx=Load()),
          args=[List(
            elts=[
              Num(n=0),
              Num(n=10),
              Num(n=20),
              Num(n=30),
              Num(n=40),
              Num(n=50)],
            ctx=Load())],
          keywords=[])),
      Assign(
        targets=[Name(
          id='with_vector',
          ctx=Store())],
        value=Call(
          func=Name(
            id='Simple',
            ctx=Load()),
          args=[],
          keywords=[
            keyword(
              arg='attr',
              value=Call(
                func=Name(
                  id='pvector',
                  ctx=Load()),
                args=[List(
                  elts=[
                    Num(n=1),
                    Num(n=2),
                    Num(n=3)],
                  ctx=Load())],
                keywords=[])),
            keyword(
              arg='other',
              value=Num(n=33))])),
      Assign(
        targets=[Name(
          id='my_map',
          ctx=Store())],
        value=Call(
          func=Name(
            id='pmap',
            ctx=Load()),
          args=[Dict(
            keys=[Str(s='other')],
            values=[Str(s='value')])],
          keywords=[])),
      Assign(
        targets=[Name(
          id='value',
          ctx=Store())],
        value=Str(s='banana')),
      Assign(
        targets=[Name(
          id='my_precord',
          ctx=Store())],
        value=Call(
          func=Name(
            id='_set_via_attr',
            ctx=Load()),
          args=[
            Name(
              id='my_precord',
              ctx=Load()),
            Str(s='attr'),
            Call(
              func=Name(
                id='_set_via_attr',
                ctx=Load()),
              args=[
                Attribute(
                  value=Name(
                    id='my_precord',
                    ctx=Load()),
                  attr='attr',
                  ctx=Load()),
                Str(s='attr'),
                Num(n=5)],
              keywords=[])],
          keywords=[])),
      Assign(
        targets=[Name(
          id='my_vector',
          ctx=Store())],
        value=Call(
          func=Name(
            id='_del_slice',
            ctx=Load()),
          args=[
            Name(
              id='my_vector',
              ctx=Load()),
            Num(n=3)],
          keywords=[])),
      Assign(
        targets=[Name(
          id='with_vector',
          ctx=Store())],
        value=Call(
          func=Name(
            id='_set_via_attr',
            ctx=Load()),
          args=[
            Name(
              id='with_vector',
              ctx=Load()),
            Str(s='attr'),
            Call(
              func=Name(
                id='_invoke',
                ctx=Load()),
              args=[
                Attribute(
                  value=Name(
                    id='with_vector',
                    ctx=Load()),
                  attr='attr',
                  ctx=Load()),
                Str(s='append'),
                Num(n=20)],
              keywords=[])],
          keywords=[])),
      Assign(
        targets=[Name(
          id='my_map',
          ctx=Store())],
        value=Call(
          func=Name(
            id='_set_via_slice',
            ctx=Load()),
          args=[
            Name(
              id='my_map',
              ctx=Load()),
            Str(s='apple'),
            Name(
              id='value',
              ctx=Load())],
          keywords=[])),
      Return(value=Tuple(
        elts=[
          Name(
            id='my_precord',
            ctx=Load()),
          Name(
            id='my_vector',
            ctx=Load()),
          Name(
            id='with_vector',
            ctx=Load()),
          Name(
            id='my_map',
            ctx=Load())],
        ctx=Load()))],
    decorator_list=[],
    returns=None)])